# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs

defaults: &defaults
     docker:
        - image: circleci/node:13.8.0

commands:
  print_pipeline_id:
   description: " command for print_pipeline_id "
   #parameters:
     #to:
      # type: string
      # default: " this the default valur for print_pipeline_id"
   steps:
     - run:
        echo ${CIRCLE_WORKFLOW_ID}


jobs:
    print_hello:
      build:
      docker:
        - image: circleci/node:13.8.0  
      steps:
        - run: 
           echo '#!/bin/sh' > run.sh
           echo 'Hello' >> run.sh
           chmod +x run.sh
        - run: sh ./run.sh
    
    print_world:
      build:
      docker:
        - image: circleci/node:13.8.0  
      steps:
        - run: 
           echo '#!/bin/sh' > run.sh
           echo 'World' >> run.sh
           chmod +x run.sh
        - run: sh ./run.sh

        
    save_hello_world_output:
       build:
       docker:
        - image: circleci/node:13.8.0   
       steps:
        - run: 
           echo "text to output here" > ~/output.txt
        - persist_to_workspace:
            root: ~/
            paths:
              - output.txt

    print_command_printpiplineid:
       build:
       docker:
        - image: circleci/node:13.8.0   
       steps:
        - print_pipeline_id

    print_output_file:
        build:
        docker:
         - image: circleci/node:13.8.0   
        steps:
           - attach_workspace:
               at: ~/
           - run: cat ~/output.txt
    Print_Env_variable:
        build:
        docker:
         - image: cimg/base:2020.01
        steps:
         - checkout
         - run:
            command:
              echo $V_Env_Name >> run.sh
    onfailjob:
     docker:
       - image: circleci/node:13.8.0
     steps:
      - run: return 1
      - run:
          name: on error
          command: echo "Hello Error!"
          when: on_fail
           
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
    # - welcome/run

     #- print_hello
    # - print_world:
          #requires:
            #- print_hello
     # - save_hello_world_output
     # - print_output_file:
      #    requires:
          #  - save_hello_world_output
      #- print_command_printpiplineid
     # - Print_Env_variable
     - onfailjob
 

